version: 2.1

preset-filter-test: &WORKFLOW_TEST_FILTER
  only:
    - develop
    - /^feature.*/
    - /^hotfix.*/
    - /^release.*/

preset-filter-deploy: &WORKFLOW_TEST_DEPLOY_FILTER
  only:
    - master

preset-filter-check: &WORKFLOW_CHECK_DEPLOY_READY_FILTER
  only:
    - /^hotfix.*/
    - /^release.*/

jobs:
  test-unity-2018-4-14f1:
    working_directory: ~/repo

    environment:
      SCRIPTS: /root/repo/Build/Scripts
      PACKAGE_FOLDER: /root/repo/Packages/Newtonsoft.Json-for-Unity.Converters
      ASSETS_FOLDER: /root/repo/Assets
      TEST_PROJECT: /root/repo
      PLATFORMS: playmode

    docker:
      - image: applejag/newtonsoft.json-for-unity.converters.package-unity-tester:v1-2018.4.14f1

    steps:
      # Checkout repo -> ~/repo
      - checkout

      - restore_cache:
          keys:
            - test-unity-upm-manifest-2018

      - restore_cache:
          keys:
            - test-unity-upm-global-2018

      - run:
          name: Enable permissions on scripts
          command: chmod +x $SCRIPTS/**.sh -v

      - run:
          name: Setup Unity license
          command: |
            # Requires UNITY_2018_4_14f1_LICENSE_CONTENT_B64 environment variable to be filled in inside CircleCI
            UNITY_LICENSE_CONTENT_B64="$UNITY_2018_4_14f1_LICENSE_CONTENT_B64" $SCRIPTS/unity_login.sh

      - run:
          name: Downgrade Unity project to 2018.x
          command: |
            echo "Moving $TEST_PROJECT/Packages/manifest.json file"
            mv -v "$TEST_PROJECT/Packages/manifest.json" "$TEST_PROJECT/Packages/.manifest.json.old"
            mv -v "$TEST_PROJECT/Packages/manifest_2018.4.14f1.json" "$TEST_PROJECT/Packages/manifest.json"
            echo
            find "$ASSETS_FOLDER" -name '.*.asmdef.old' -exec rm -v {} +
            echo
            find "$ASSETS_FOLDER" -name '*.asmdef' -exec $SCRIPTS/unity_downgrade_asmdef.sh --backup "{}" \;

      - run:
          name: Run tests
          command: $SCRIPTS/unity_test.sh $TEST_PROJECT ~/tests/nunit

      - run:
          name: Convert NUnit to JUnit xml
          when: always
          command: $SCRIPTS/nunit2junit.sh ~/tests/nunit ~/tests/junit/

      - store_test_results:
          name: Store test results -> ~/tests/junit
          path: ~/tests/junit

      - save_cache:
          key: test-unity-upm-manifest-2018
          paths:
            - /root/repo/Library/PackageCache

      - save_cache:
          key: test-unity-upm-global-2018
          paths:
            - /root/.config/unity3d/cache

  test-unity-2019-2-11f1:
    working_directory: ~/repo

    environment:
      SCRIPTS: /root/repo/Build/Scripts
      PACKAGE_FOLDER: /root/repo/Packages/Newtonsoft.Json-for-Unity.Converters
      ASSETS_FOLDER: /root/repo/Assets
      TEST_PROJECT: /root/repo
      PLATFORMS: playmode

    docker:
      - image: applejag/newtonsoft.json-for-unity.converters.package-unity-tester:v1-2019.2.11f1

    steps:
      # Checkout repo -> ~/repo
      - checkout

      - restore_cache:
          keys:
            - test-unity-upm-manifest-{{ checksum "/root/repo/Packages/manifest.json" }}

      - restore_cache:
          keys:
            - test-unity-upm-global-2019

      - run:
          name: Enable permissions on scripts
          command: chmod +x $SCRIPTS/**.sh -v

      - run:
          name: Setup Unity license
          command: |
            # Requires UNITY_2019_2_11f1_LICENSE_CONTENT_B64 environment variable to be filled in inside CircleCI
            UNITY_LICENSE_CONTENT_B64="$UNITY_2019_2_11f1_LICENSE_CONTENT_B64" $SCRIPTS/unity_login.sh

      - run:
          name: Run tests
          command: $SCRIPTS/unity_test.sh $TEST_PROJECT ~/tests/nunit

      - run:
          name: Convert NUnit to JUnit xml
          when: always
          command: $SCRIPTS/nunit2junit.sh ~/tests/nunit ~/tests/junit/

      - store_test_results:
          name: Store test results -> ~/tests/junit
          path: ~/tests/junit

      - save_cache:
          key: test-unity-upm-manifest-{{ checksum "/root/repo/Packages/manifest.json" }}
          paths:
            - /root/repo/Library/PackageCache

      - save_cache:
          key: test-unity-upm-global-2019
          paths:
            - /root/.config/unity3d/cache

  test-unity-2020-1-0b6:
    working_directory: ~/repo

    environment:
      SCRIPTS: /root/repo/Build/Scripts
      PACKAGE_FOLDER: /root/repo/Packages/Newtonsoft.Json-for-Unity.Converters
      ASSETS_FOLDER: /root/repo/Assets
      TEST_PROJECT: /root/repo
      PLATFORMS: playmode

    docker:
      - image: applejag/newtonsoft.json-for-unity.converters.package-unity-tester:v1-2020.1.0b6-linux-il2cpp

    steps:
      # Checkout repo -> ~/repo
      - checkout

      - restore_cache:
          keys:
            - test-unity-upm-manifest-{{ checksum "/root/repo/Packages/manifest.json" }}

      - restore_cache:
          keys:
            - test-unity-upm-global-2020

      - run:
          name: Enable permissions on scripts
          command: chmod +x $SCRIPTS/**.sh -v

      - run:
          name: Setup Unity license
          command: |
            # Requires UNITY_2020_1_0b6_LICENSE_CONTENT_B64 environment variable to be filled in inside CircleCI
            UNITY_LICENSE_CONTENT_B64="$UNITY_2020_1_0b6_LICENSE_CONTENT_B64" $SCRIPTS/unity_login.sh

      - run:
          name: Run tests
          command: $SCRIPTS/unity_test.sh $TEST_PROJECT ~/tests/nunit

      - run:
          name: Convert NUnit to JUnit xml
          when: always
          command: $SCRIPTS/nunit2junit.sh ~/tests/nunit ~/tests/junit/

      - store_test_results:
          name: Store test results -> ~/tests/junit
          path: ~/tests/junit

      - save_cache:
          key: test-unity-upm-manifest-{{ checksum "/root/repo/Packages/manifest.json" }}
          paths:
            - /root/repo/Library/PackageCache

      - save_cache:
          key: test-unity-upm-global-2020
          paths:
            - /root/.config/unity3d/cache

  check-deploy-ready:
    working_directory: /root/repo

    docker:
      - image: applejag/newtonsoft.json-for-unity.converters.package-deploy-npm:v3

    environment:
      SCRIPTS: /root/repo/Build/Scripts
      PACKAGE_FOLDER: /root/repo/Packages/Newtonsoft.Json-for-Unity.Converters

    steps:
      - checkout

      - attach_workspace:
          at: /workspace

      - run:
          name: Enable permissions on scripts
          command: chmod +x $SCRIPTS/**.sh -v

      - run:
          name: Setup Variables
          command: $SCRIPTS/build_setup_variables.sh

      - run:
          name: Check if release is ready for deploy
          command: $SCRIPTS/check_deploy_ready.sh

  deploy-cloudsmith:
    working_directory: /root/repo

    docker:
      - image: applejag/newtonsoft.json-for-unity.converters.package-deploy-npm:v3

    environment:
      SCRIPTS: /root/repo/Build/Scripts
      REPO_FOLDER: /root/repo
      PACKAGE_FOLDER: /root/repo/Packages/Newtonsoft.Json-for-Unity.Converters
      NPM_REGISTRY: https://npm.cloudsmith.io/jillejr/newtonsoft-json-for-unity/

    steps:
      - checkout

      - run:
          name: Enable permissions on scripts
          command: chmod +x $SCRIPTS/**.sh -v

      - run:
          name: Setup Variables
          command: $SCRIPTS/build_setup_variables.sh

      - run:
          name: NPM Login
          command: |
            echo "//npm.cloudsmith.io/jillejr/newtonsoft-json-for-unity/:_authToken=$NPM_AUTH_TOKEN" >> ~/.npmrc
            echo "registry=$NPM_REGISTRY" >> ~/.npmrc
            echo "always-auth=true" >> ~/.npmrc

      - run:
          name: Deploy
          command: |
            if [ -z "$(npm view jillejr.newtonsoft.json-for-unity.converters@$VERSION_UPM versions)" ]
            then
              cp -fv $REPO_FOLDER/CHANGELOG.md $PACKAGE_FOLDER/.
              echo

              cd $PACKAGE_FOLDER
              npm publish
            else
              echo "Package version $VERSION_UPM already existed. Skipping the publish"
            fi

  deploy-github:
    working_directory: /root/repo

    environment:
      SCRIPTS: /root/repo/Build/Scripts
      PACKAGE_FOLDER: /root/repo/Packages/Newtonsoft.Json-for-Unity.Converters
      REPO_FOLDER: /root/repo

    docker:
      - image: applejag/newtonsoft.json-for-unity.converters.package-deploy-github:v4

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "4d:b2:3f:e0:17:3e:3a:bd:7d:16:5b:ca:b7:6e:fb:c0"

      - run:
          name: Enable permissions on scripts
          command: chmod +x $SCRIPTS/**.sh -v

      - run:
          name: Git Login
          command: $SCRIPTS/git_login.sh

      - run:
          name: Setup Variables
          command: $SCRIPTS/build_setup_variables.sh

      - run:
          name: Deploy
          command: $SCRIPTS/deploy_git.sh

workflows:
  version: 2
  test:
    jobs:
      - test-unity-2018-4-14f1:
          filters:
            branches:
              <<: *WORKFLOW_TEST_FILTER
      - test-unity-2019-2-11f1:
          filters:
            branches:
              <<: *WORKFLOW_TEST_FILTER
      - test-unity-2020-1-0b6:
          filters:
            branches:
              <<: *WORKFLOW_TEST_FILTER
  check-deploy-ready:
    jobs:
      - check-deploy-ready:
          filters:
            branches:
              <<: *WORKFLOW_CHECK_DEPLOY_READY_FILTER
  test-deploy:
    jobs:
      - test-unity-2018-4-14f1:
          filters:
            branches:
              <<: *WORKFLOW_TEST_DEPLOY_FILTER
      - test-unity-2019-2-11f1:
          filters:
            branches:
              <<: *WORKFLOW_TEST_DEPLOY_FILTER
      - test-unity-2020-1-0b6:
          filters:
            branches:
              <<: *WORKFLOW_TEST_DEPLOY_FILTER
      - check-deploy-ready:
          filters:
            branches:
              <<: *WORKFLOW_TEST_DEPLOY_FILTER
      - deploy-cloudsmith:
          requires:
            - check-deploy-ready
            - test-unity-2018-4-14f1
            - test-unity-2019-2-11f1
            - test-unity-2020-1-0b6
      - deploy-github:
          requires:
            - check-deploy-ready
            - test-unity-2018-4-14f1
            - test-unity-2019-2-11f1
            - test-unity-2020-1-0b6
